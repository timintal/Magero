//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentLookupGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class GameComponentsLookup {

    public const int AcidPuddle = 0;
    public const int AcidStream = 1;
    public const int Animator = 2;
    public const int AnimatorSpeedSync = 3;
    public const int AssetLink = 4;
    public const int Attacker = 5;
    public const int AutoDestruction = 6;
    public const int BeamRenderer = 7;
    public const int BlackHole = 8;
    public const int BlackHoleProjectile = 9;
    public const int BlackHoleShooter = 10;
    public const int Camera = 11;
    public const int ColliderCache = 12;
    public const int Collider = 13;
    public const int CurrentLevelStage = 14;
    public const int Damage = 15;
    public const int DamageOverTimeZone = 16;
    public const int DamageSourcePosition = 17;
    public const int Damping = 18;
    public const int Destroyed = 19;
    public const int Direction = 20;
    public const int EnemySpawner = 21;
    public const int EnemySpawnRequest = 22;
    public const int EntityRef = 23;
    public const int ExplodableProjectile = 24;
    public const int ExplodableProjectileShooter = 25;
    public const int Explosion = 26;
    public const int ExplosionVisualization = 27;
    public const int FieldUpdateCooldown = 28;
    public const int FlowField = 29;
    public const int FlowFieldDirectionUpdateDelay = 30;
    public const int FlowFieldMover = 31;
    public const int FlowFieldTarget = 32;
    public const int FlowFieldTemporaryObstacle = 33;
    public const int Flying = 34;
    public const int FlyingEnemyFlowField = 35;
    public const int ForcedMovement = 36;
    public const int GameSceneReferences = 37;
    public const int GameSetup = 38;
    public const int GasCloud = 39;
    public const int GasProjectile = 40;
    public const int GasProjectileShooter = 41;
    public const int GroundEnemyFlowField = 42;
    public const int HealthBarUI = 43;
    public const int Health = 44;
    public const int HitPointEffect = 45;
    public const int Id = 46;
    public const int LaserShooter = 47;
    public const int LayerMask = 48;
    public const int Level = 49;
    public const int LevelFinished = 50;
    public const int LightningShooter = 51;
    public const int MaxHealth = 52;
    public const int OnDestroyFx = 53;
    public const int PartitionGrid = 54;
    public const int Player = 55;
    public const int PlayerWeaponDirection = 56;
    public const int Position = 57;
    public const int Projectile = 58;
    public const int ProjectileLanded = 59;
    public const int ProjectileShooter = 60;
    public const int Radius = 61;
    public const int RagdollAngularVelocity = 62;
    public const int RagdollCurrentVelocity = 63;
    public const int RagdollDeath = 64;
    public const int RagdollRemoveTimer = 65;
    public const int ReceivedDamage = 66;
    public const int ReceivedFloatDamage = 67;
    public const int Renderer = 68;
    public const int Resource = 69;
    public const int Rotation = 70;
    public const int Scale = 71;
    public const int Speed = 72;
    public const int SpeedModifierZone = 73;
    public const int Stunned = 74;
    public const int Summon = 75;
    public const int SummonFlowField = 76;
    public const int SummonSpell = 77;
    public const int Target = 78;
    public const int TimerCompleted = 79;
    public const int Timer = 80;
    public const int Transform = 81;
    public const int WeaponCooldown = 82;
    public const int WeaponDisabled = 83;
    public const int WeaponHitPoint = 84;
    public const int WindBlower = 85;
    public const int WindImpulse = 86;

    public const int TotalComponents = 87;

    public static readonly string[] componentNames = {
        "AcidPuddle",
        "AcidStream",
        "Animator",
        "AnimatorSpeedSync",
        "AssetLink",
        "Attacker",
        "AutoDestruction",
        "BeamRenderer",
        "BlackHole",
        "BlackHoleProjectile",
        "BlackHoleShooter",
        "Camera",
        "ColliderCache",
        "Collider",
        "CurrentLevelStage",
        "Damage",
        "DamageOverTimeZone",
        "DamageSourcePosition",
        "Damping",
        "Destroyed",
        "Direction",
        "EnemySpawner",
        "EnemySpawnRequest",
        "EntityRef",
        "ExplodableProjectile",
        "ExplodableProjectileShooter",
        "Explosion",
        "ExplosionVisualization",
        "FieldUpdateCooldown",
        "FlowField",
        "FlowFieldDirectionUpdateDelay",
        "FlowFieldMover",
        "FlowFieldTarget",
        "FlowFieldTemporaryObstacle",
        "Flying",
        "FlyingEnemyFlowField",
        "ForcedMovement",
        "GameSceneReferences",
        "GameSetup",
        "GasCloud",
        "GasProjectile",
        "GasProjectileShooter",
        "GroundEnemyFlowField",
        "HealthBarUI",
        "Health",
        "HitPointEffect",
        "Id",
        "LaserShooter",
        "LayerMask",
        "Level",
        "LevelFinished",
        "LightningShooter",
        "MaxHealth",
        "OnDestroyFx",
        "PartitionGrid",
        "Player",
        "PlayerWeaponDirection",
        "Position",
        "Projectile",
        "ProjectileLanded",
        "ProjectileShooter",
        "Radius",
        "RagdollAngularVelocity",
        "RagdollCurrentVelocity",
        "RagdollDeath",
        "RagdollRemoveTimer",
        "ReceivedDamage",
        "ReceivedFloatDamage",
        "Renderer",
        "Resource",
        "Rotation",
        "Scale",
        "Speed",
        "SpeedModifierZone",
        "Stunned",
        "Summon",
        "SummonFlowField",
        "SummonSpell",
        "Target",
        "TimerCompleted",
        "Timer",
        "Transform",
        "WeaponCooldown",
        "WeaponDisabled",
        "WeaponHitPoint",
        "WindBlower",
        "WindImpulse"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(AcidPuddleComponent),
        typeof(AcidStreamComponent),
        typeof(AnimatorComponent),
        typeof(AnimatorSpeedSyncComponent),
        typeof(AssetLinkComponent),
        typeof(AttackerComponent),
        typeof(AutoDestructionComponent),
        typeof(BeamRendererComponent),
        typeof(BlackHoleComponent),
        typeof(BlackHoleProjectileComponent),
        typeof(BlackHoleShooterComponent),
        typeof(CameraComponent),
        typeof(ColliderCacheComponent),
        typeof(ColliderComponent),
        typeof(CurrentLevelStageComponent),
        typeof(DamageComponent),
        typeof(DamageOverTimeZoneComponent),
        typeof(DamageSourcePositionComponent),
        typeof(DampingComponent),
        typeof(DestroyedComponent),
        typeof(DirectionComponent),
        typeof(EnemySpawnerComponent),
        typeof(EnemySpawnRequestComponent),
        typeof(EntityRefComponent),
        typeof(ExplodableProjectileComponent),
        typeof(ExplodableProjectileShooterComponent),
        typeof(ExplosionComponent),
        typeof(ExplosionVisualizationComponent),
        typeof(FieldUpdateCooldownComponent),
        typeof(FlowFieldComponent),
        typeof(FlowFieldDirectionUpdateDelayComponent),
        typeof(FlowFieldMoverComponent),
        typeof(FlowFieldTargetComponent),
        typeof(FlowFieldTemporaryObstacleComponent),
        typeof(FlyingComponent),
        typeof(FlyingEnemyFlowFieldComponent),
        typeof(ForcedMovementComponent),
        typeof(GameSceneReferencesComponent),
        typeof(GameSetupComponent),
        typeof(GasCloudComponent),
        typeof(GasProjectileComponent),
        typeof(GasProjectileShooterComponent),
        typeof(GroundEnemyFlowFieldComponent),
        typeof(HealthBarUIComponent),
        typeof(HealthComponent),
        typeof(HitPointEffectComponent),
        typeof(IdComponent),
        typeof(LaserShooterComponent),
        typeof(LayerMaskComponent),
        typeof(LevelComponent),
        typeof(LevelFinishedComponent),
        typeof(LightningShooterComponent),
        typeof(MaxHealthComponent),
        typeof(OnDestroyFxComponent),
        typeof(PartitionGridComponent),
        typeof(PlayerComponent),
        typeof(PlayerWeaponDirectionComponent),
        typeof(PositionComponent),
        typeof(ProjectileComponent),
        typeof(ProjectileLandedComponent),
        typeof(ProjectileShooterComponent),
        typeof(RadiusComponent),
        typeof(RagdollAngularVelocityComponent),
        typeof(RagdollCurrentVelocityComponent),
        typeof(RagdollDeathComponent),
        typeof(RagdollRemoveTimerComponent),
        typeof(ReceivedDamageComponent),
        typeof(ReceivedFloatDamageComponent),
        typeof(RendererComponent),
        typeof(ResourceComponent),
        typeof(RotationComponent),
        typeof(ScaleComponent),
        typeof(SpeedComponent),
        typeof(SpeedModifierZone),
        typeof(StunnedComponent),
        typeof(SummonComponent),
        typeof(SummonFlowFieldComponent),
        typeof(SummonSpellComponent),
        typeof(TargetComponent),
        typeof(TimerCompletedComponent),
        typeof(TimerComponent),
        typeof(TransformComponent),
        typeof(WeaponCooldownComponent),
        typeof(WeaponDisabledComponent),
        typeof(WeaponHitPointComponent),
        typeof(WindBlowerComponent),
        typeof(WindImpulseComponent)
    };
}
