//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity colliderCacheEntity { get { return GetGroup(GameMatcher.ColliderCache).GetSingleEntity(); } }
    public ColliderCacheComponent colliderCache { get { return colliderCacheEntity.colliderCache; } }
    public bool hasColliderCache { get { return colliderCacheEntity != null; } }

    public GameEntity SetColliderCache(System.Collections.Generic.Dictionary<UnityEngine.Collider, int> newColliderCacheMap) {
        if (hasColliderCache) {
            throw new Entitas.EntitasException("Could not set ColliderCache!\n" + this + " already has an entity with ColliderCacheComponent!",
                "You should check if the context already has a colliderCacheEntity before setting it or use context.ReplaceColliderCache().");
        }
        var entity = CreateEntity();
        entity.AddColliderCache(newColliderCacheMap);
        return entity;
    }

    public void ReplaceColliderCache(System.Collections.Generic.Dictionary<UnityEngine.Collider, int> newColliderCacheMap) {
        var entity = colliderCacheEntity;
        if (entity == null) {
            entity = SetColliderCache(newColliderCacheMap);
        } else {
            entity.ReplaceColliderCache(newColliderCacheMap);
        }
    }

    public void RemoveColliderCache() {
        colliderCacheEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ColliderCacheComponent colliderCache { get { return (ColliderCacheComponent)GetComponent(GameComponentsLookup.ColliderCache); } }
    public bool hasColliderCache { get { return HasComponent(GameComponentsLookup.ColliderCache); } }

    public void AddColliderCache(System.Collections.Generic.Dictionary<UnityEngine.Collider, int> newColliderCacheMap) {
        var index = GameComponentsLookup.ColliderCache;
        var component = (ColliderCacheComponent)CreateComponent(index, typeof(ColliderCacheComponent));
        component.ColliderCacheMap = newColliderCacheMap;
        AddComponent(index, component);
    }

    public void ReplaceColliderCache(System.Collections.Generic.Dictionary<UnityEngine.Collider, int> newColliderCacheMap) {
        var index = GameComponentsLookup.ColliderCache;
        var component = (ColliderCacheComponent)CreateComponent(index, typeof(ColliderCacheComponent));
        component.ColliderCacheMap = newColliderCacheMap;
        ReplaceComponent(index, component);
    }

    public void RemoveColliderCache() {
        RemoveComponent(GameComponentsLookup.ColliderCache);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherColliderCache;

    public static Entitas.IMatcher<GameEntity> ColliderCache {
        get {
            if (_matcherColliderCache == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ColliderCache);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherColliderCache = matcher;
            }

            return _matcherColliderCache;
        }
    }
}
