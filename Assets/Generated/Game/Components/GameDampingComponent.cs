//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public DampingComponent damping { get { return (DampingComponent)GetComponent(GameComponentsLookup.Damping); } }
    public bool hasDamping { get { return HasComponent(GameComponentsLookup.Damping); } }

    public void AddDamping(float newDecreasePerSecond) {
        var index = GameComponentsLookup.Damping;
        var component = (DampingComponent)CreateComponent(index, typeof(DampingComponent));
        component.DecreasePerSecond = newDecreasePerSecond;
        AddComponent(index, component);
    }

    public void ReplaceDamping(float newDecreasePerSecond) {
        var index = GameComponentsLookup.Damping;
        var component = (DampingComponent)CreateComponent(index, typeof(DampingComponent));
        component.DecreasePerSecond = newDecreasePerSecond;
        ReplaceComponent(index, component);
    }

    public void RemoveDamping() {
        RemoveComponent(GameComponentsLookup.Damping);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDamping;

    public static Entitas.IMatcher<GameEntity> Damping {
        get {
            if (_matcherDamping == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Damping);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDamping = matcher;
            }

            return _matcherDamping;
        }
    }
}
