//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ExplodableProjectileComponent explodableProjectile { get { return (ExplodableProjectileComponent)GetComponent(GameComponentsLookup.ExplodableProjectile); } }
    public bool hasExplodableProjectile { get { return HasComponent(GameComponentsLookup.ExplodableProjectile); } }

    public void AddExplodableProjectile(float newExplosionRadius) {
        var index = GameComponentsLookup.ExplodableProjectile;
        var component = (ExplodableProjectileComponent)CreateComponent(index, typeof(ExplodableProjectileComponent));
        component.ExplosionRadius = newExplosionRadius;
        AddComponent(index, component);
    }

    public void ReplaceExplodableProjectile(float newExplosionRadius) {
        var index = GameComponentsLookup.ExplodableProjectile;
        var component = (ExplodableProjectileComponent)CreateComponent(index, typeof(ExplodableProjectileComponent));
        component.ExplosionRadius = newExplosionRadius;
        ReplaceComponent(index, component);
    }

    public void RemoveExplodableProjectile() {
        RemoveComponent(GameComponentsLookup.ExplodableProjectile);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherExplodableProjectile;

    public static Entitas.IMatcher<GameEntity> ExplodableProjectile {
        get {
            if (_matcherExplodableProjectile == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ExplodableProjectile);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherExplodableProjectile = matcher;
            }

            return _matcherExplodableProjectile;
        }
    }
}
