//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public FlowFieldTargetComponent flowFieldTarget { get { return (FlowFieldTargetComponent)GetComponent(GameComponentsLookup.FlowFieldTarget); } }
    public bool hasFlowFieldTarget { get { return HasComponent(GameComponentsLookup.FlowFieldTarget); } }

    public void AddFlowFieldTarget(int newStartValue) {
        var index = GameComponentsLookup.FlowFieldTarget;
        var component = (FlowFieldTargetComponent)CreateComponent(index, typeof(FlowFieldTargetComponent));
        component.StartValue = newStartValue;
        AddComponent(index, component);
    }

    public void ReplaceFlowFieldTarget(int newStartValue) {
        var index = GameComponentsLookup.FlowFieldTarget;
        var component = (FlowFieldTargetComponent)CreateComponent(index, typeof(FlowFieldTargetComponent));
        component.StartValue = newStartValue;
        ReplaceComponent(index, component);
    }

    public void RemoveFlowFieldTarget() {
        RemoveComponent(GameComponentsLookup.FlowFieldTarget);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherFlowFieldTarget;

    public static Entitas.IMatcher<GameEntity> FlowFieldTarget {
        get {
            if (_matcherFlowFieldTarget == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.FlowFieldTarget);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherFlowFieldTarget = matcher;
            }

            return _matcherFlowFieldTarget;
        }
    }
}
