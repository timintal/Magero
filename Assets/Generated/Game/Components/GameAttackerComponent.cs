//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AttackerComponent attacker { get { return (AttackerComponent)GetComponent(GameComponentsLookup.Attacker); } }
    public bool hasAttacker { get { return HasComponent(GameComponentsLookup.Attacker); } }

    public void AddAttacker(TargetType newTargetType, UnityEngine.LayerMask newTargetMask) {
        var index = GameComponentsLookup.Attacker;
        var component = (AttackerComponent)CreateComponent(index, typeof(AttackerComponent));
        component.TargetType = newTargetType;
        component.TargetMask = newTargetMask;
        AddComponent(index, component);
    }

    public void ReplaceAttacker(TargetType newTargetType, UnityEngine.LayerMask newTargetMask) {
        var index = GameComponentsLookup.Attacker;
        var component = (AttackerComponent)CreateComponent(index, typeof(AttackerComponent));
        component.TargetType = newTargetType;
        component.TargetMask = newTargetMask;
        ReplaceComponent(index, component);
    }

    public void RemoveAttacker() {
        RemoveComponent(GameComponentsLookup.Attacker);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAttacker;

    public static Entitas.IMatcher<GameEntity> Attacker {
        get {
            if (_matcherAttacker == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Attacker);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAttacker = matcher;
            }

            return _matcherAttacker;
        }
    }
}
