//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public LaserHitPointComponent laserHitPoint { get { return (LaserHitPointComponent)GetComponent(GameComponentsLookup.LaserHitPoint); } }
    public bool hasLaserHitPoint { get { return HasComponent(GameComponentsLookup.LaserHitPoint); } }

    public void AddLaserHitPoint(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.LaserHitPoint;
        var component = (LaserHitPointComponent)CreateComponent(index, typeof(LaserHitPointComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceLaserHitPoint(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.LaserHitPoint;
        var component = (LaserHitPointComponent)CreateComponent(index, typeof(LaserHitPointComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveLaserHitPoint() {
        RemoveComponent(GameComponentsLookup.LaserHitPoint);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherLaserHitPoint;

    public static Entitas.IMatcher<GameEntity> LaserHitPoint {
        get {
            if (_matcherLaserHitPoint == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.LaserHitPoint);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherLaserHitPoint = matcher;
            }

            return _matcherLaserHitPoint;
        }
    }
}
