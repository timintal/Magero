//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public DamageOverTimeZoneComponent damageOverTimeZone { get { return (DamageOverTimeZoneComponent)GetComponent(GameComponentsLookup.DamageOverTimeZone); } }
    public bool hasDamageOverTimeZone { get { return HasComponent(GameComponentsLookup.DamageOverTimeZone); } }

    public void AddDamageOverTimeZone(float newDamagePerSecond) {
        var index = GameComponentsLookup.DamageOverTimeZone;
        var component = (DamageOverTimeZoneComponent)CreateComponent(index, typeof(DamageOverTimeZoneComponent));
        component.DamagePerSecond = newDamagePerSecond;
        AddComponent(index, component);
    }

    public void ReplaceDamageOverTimeZone(float newDamagePerSecond) {
        var index = GameComponentsLookup.DamageOverTimeZone;
        var component = (DamageOverTimeZoneComponent)CreateComponent(index, typeof(DamageOverTimeZoneComponent));
        component.DamagePerSecond = newDamagePerSecond;
        ReplaceComponent(index, component);
    }

    public void RemoveDamageOverTimeZone() {
        RemoveComponent(GameComponentsLookup.DamageOverTimeZone);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDamageOverTimeZone;

    public static Entitas.IMatcher<GameEntity> DamageOverTimeZone {
        get {
            if (_matcherDamageOverTimeZone == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DamageOverTimeZone);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDamageOverTimeZone = matcher;
            }

            return _matcherDamageOverTimeZone;
        }
    }
}
