//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public HitPointEffectComponent hitPointEffect { get { return (HitPointEffectComponent)GetComponent(GameComponentsLookup.HitPointEffect); } }
    public bool hasHitPointEffect { get { return HasComponent(GameComponentsLookup.HitPointEffect); } }

    public void AddHitPointEffect(UnityEngine.Transform newFxTransform) {
        var index = GameComponentsLookup.HitPointEffect;
        var component = (HitPointEffectComponent)CreateComponent(index, typeof(HitPointEffectComponent));
        component.FxTransform = newFxTransform;
        AddComponent(index, component);
    }

    public void ReplaceHitPointEffect(UnityEngine.Transform newFxTransform) {
        var index = GameComponentsLookup.HitPointEffect;
        var component = (HitPointEffectComponent)CreateComponent(index, typeof(HitPointEffectComponent));
        component.FxTransform = newFxTransform;
        ReplaceComponent(index, component);
    }

    public void RemoveHitPointEffect() {
        RemoveComponent(GameComponentsLookup.HitPointEffect);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherHitPointEffect;

    public static Entitas.IMatcher<GameEntity> HitPointEffect {
        get {
            if (_matcherHitPointEffect == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.HitPointEffect);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherHitPointEffect = matcher;
            }

            return _matcherHitPointEffect;
        }
    }
}
